// Generated by CoffeeScript 1.9.3
(function() {
  var Witch, feels, formatStat, m, marks, mk, moves, natures, pc, ranks;

  document.title = "Night Witches";

  formatStat = function(num) {
    if (num < 0) {
      return "" + num;
    } else {
      return "+" + num;
    }
  };

  ranks = ["Sergeant", "Junior Lieutenant", " Lieutenant", "Senior  Lieutenant", "Captain", "Major"];

  feels = ["love", "trust", "admire", "respect", "hate", "resent", "pity", "fear"];

  natures = {
    hawk: {
      name: "Hawk",
      moves: [
        {
          name: "Suka",
          desc: "You enjoy +1 ongoing when acting like a hooligan. When you act like a lady you are marked."
        }, {
          name: "People’s Hero",
          desc: "Name the high-ranking official who has taken a personal interest in your career."
        }, {
          name: "11.4 Meters Tip-to-Tip",
          desc: "When you want to land in some new place, you can ask “Is it remotely possible to land there?” and the GM will tell you. If the answer is yes, you don’t need to roll the Wheels Down move."
        }, {
          name: "As Seen In Pravda",
          desc: "Use +medals instead of +guts when you Tempt Fate."
        }, {
          name: "Miss Sverdlovsk 1939",
          desc: "Advance the first time you have sex with each of: a Senior Lieutenant, a Captain, a Major, a Lieutenant Colonel, or a Colonel."
        }
      ],
      maxRegard: 3,
      marks: ["Suffer the death of a friend or lover.", "Witness the death of a comrade.", "Give your aircraft a personality.", "Make a friend or take a lover.", "Tell a self-aggrandizing lie.", "Share a painful truth about yourself.", "Acquire a dread or superstition.", "Put duty before health or love.", "Advance and grow.", "Tell a war story.", "Tell a story of home.", "Embrace Death and face your final destiny."]
    }
  };

  Witch = (function() {
    function Witch() {
      this.rank = 0;
      this.promos = 0;
      this.guts = 0;
      this.luck = 0;
      this.skill = 0;
      this.medals = 0;
      this.regard = 0;
    }

    Witch.prototype.updateBinding = function() {
      var maxPromo, maxRegard, ref, ref1;
      $("header h1").html("<span class='rank'>" + ranks[this.rank] + " </span>" + this.name);
      $("#nat_role").text(this.nature.name + " Zealot");
      $("#guts span").text(formatStat(this.guts));
      $("#luck span").text(formatStat(this.luck));
      $("#skill span").text(formatStat(this.skill));
      $("#medals span").text(formatStat(this.medals));
      if (this.medals >= 4) {
        $("#plusmedal").attr('disabled', 'disabled');
      }
      maxPromo = (ref = this.nature.maxPromo) != null ? ref : 4;
      if (this.guts >= 3 || this.promos >= maxPromo) {
        $("#promoguts").attr('disabled', 'disabled');
      }
      if (this.luck >= 3 || this.promos >= maxPromo) {
        $("#promoluck").attr('disabled', 'disabled');
      }
      if (this.skill >= 3 || this.promos >= maxPromo) {
        $("#promoskill").attr('disabled', 'disabled');
      }
      maxRegard = (ref1 = this.nature.maxRegard) != null ? ref1 : 4;
      if (this.regard >= maxRegard) {
        return $("#addregard").attr('disabled', 'disabled');
      }
    };

    Witch.prototype.rollStat = function(stat) {
      var d1, d2, newVal;
      d1 = Math.floor(Math.random() * 6 + 1);
      d2 = Math.floor(Math.random() * 6 + 1);
      newVal = d1 + d2 + this[stat];
      return $("footer p").text("Roll + " + stat + " = " + newVal + " (" + d1 + ", " + d2 + ")");
    };

    return Witch;

  })();

  pc = new Witch();

  pc.name = "Natasha Romanov";

  pc.nature = natures.hawk;

  pc.guts = 1;

  pc.skill = -1;

  moves = (function() {
    var i, len, ref, results;
    ref = pc.nature.moves;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      m = ref[i];
      results.push("<li><strong>" + m.name + ":</strong> " + m.desc + "</li>");
    }
    return results;
  })();

  $("#adv_moves").html(moves.join(""));

  marks = (function() {
    var i, len, ref, results;
    ref = pc.nature.marks;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      mk = ref[i];
      results.push("<button>" + mk + "</button>");
    }
    return results;
  })();

  $("#adv_marks").html(marks.join(""));

  pc.updateBinding();

  $(".stats button").on("click", function(e) {
    pc.rollStat($(this).attr("id"));
    return false;
  });

  $("#plusmedal").on("click", function(e) {
    pc.medals += 1;
    pc.updateBinding();
    return false;
  });

  $("#promoguts").on("click", function(e) {
    pc.guts += 1;
    pc.rank += 1;
    pc.promos += 1;
    pc.updateBinding();
    return false;
  });

  $("#promoluck").on("click", function(e) {
    pc.luck += 1;
    pc.rank += 1;
    pc.promos += 1;
    pc.updateBinding();
    return false;
  });

  $("#promoskill").on("click", function(e) {
    pc.skill += 1;
    pc.rank += 1;
    pc.promos += 1;
    pc.updateBinding();
    return false;
  });

  $("#addregard").on("click", function(e) {
    var f, v, vals;
    pc.regard += 1;
    vals = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = feels.length; i < len; i++) {
        f = feels[i];
        results.push("<option>" + f + "</option>");
      }
      return results;
    })();
    v = vals.join("");
    $(".regard li.locked:first").removeClass("locked").html("<select>" + v + "</select><input type='text' />");
    pc.updateBinding();
    return false;
  });

  $("#changestation").on("click", function(e) {
    return $(this).attr("disabled", "disabled");
  });

  $(".harm li").on("click", function(e) {
    $(".harm li").removeClass("curr");
    $(this).addClass("curr");
    return false;
  });

  $(".marks button").on("click", function(e) {
    return $(this).attr("disabled", "disabled").contents().wrap("<strike></strike>");
  });

}).call(this);
